skip module GHC.Types

# partial

skip method Foldable foldl1
skip method Foldable foldr1
skip method Foldable maximum
skip method Foldable minimum

skip minimumBy
skip maximumBy

skip instance_Foldable_Data_Monoid_First
skip instance_Foldable_Data_Monoid_Last

# skip instance_forall___GHC_Base_Ord_a___GHC_Base_Monoid__Max_a_
# skip instance_forall___GHC_Base_Ord_a___GHC_Base_Monoid__Min_a_

order instance_Foldable_list concatMap concat
redefine Definition hash_compose {a} {b} {c} := @Coq.Program.Basics.compose a b c.

# HACK: We want Coq to pick up the list instance of Foldable inside concat
order concat concatinstance_Foldable_option
order concat instance_Foldable__Data_Either_Either_a_

# Generic stuff
skip instance_Foldable_GHC_Generics_U1
skip instance_Foldable__GHC_Arr_Array_i_
skip instance_Foldable_GHC_Generics_V1
skip instance_Foldable__GHC_Generics_URec__GHC_Ptr_Ptr_unit__
skip instance_Foldable__GHC_Generics_URec_GHC_Num_Word_
skip instance_Foldable__GHC_Generics_URec_GHC_Num_Int_
skip instance_Foldable__GHC_Generics_URec_GHC_Types_Float_
skip instance_Foldable__GHC_Generics_URec_GHC_Types_Double_
skip instance_Foldable__GHC_Generics_URec_GHC_Char_Char_
skip instance_forall___Foldable_f____Foldable_g___Foldable__GHC_Generics_____f_g_
skip instance_forall___Foldable_f___Foldable__GHC_Generics_M1_i_c_f_
skip instance_Foldable__GHC_Generics_K1_i_c_
skip instance_forall___Foldable_f___Foldable__GHC_Generics_Rec1_f_
skip instance_Foldable_GHC_Generics_Par1
